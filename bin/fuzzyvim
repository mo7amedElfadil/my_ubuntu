#!/bin/bash
function fuzzyvim() {
    # Open nvim to fzf result. The function takes in a string to search for
	# add option -o to open in neo vim
	# add option -m for multiselect in fzf
	# add option -p to preview the files in fzf
	# add option -h to display the help menu
	# add option -r to search from home directory
	# add option -f to search for a string in the files, preview, allow multiselect in fzf
	# add option -s to search for a string in the files
	# Define flags
	nvim_flag=false
	search_flag=false
	
	help_message() {
		echo "Usage: fuzzyvim [-o] [-m] [-p] [-h] [-r] [-s <query>]" >&2
		echo "o: open the files in nvim" >&2
		echo "m: allow multiselect in fzf (use tab to select)" >&2
		echo "p: preview the files in fzf" >&2
		echo "r: search from the home directory" >&2
		echo "s: search for a string in the files using grep before the fzf" >&2
		echo "f: search for a string, preview, allow multiselect in the files using grep before the fzf" >&2
		echo "h: display the help menu" >&2
		return 0
	}

	fzf_command="fzf"
	grep_command="grep -rnl --exclude-dir=node_modules --exclude-dir=dist --exclude-dir=build --exclude-dir=__pycache__"
	grep_location="."
	while getopts ":omprs:hf:" opt; do 
		case ${opt} in
			o)
				nvim_flag=true
				;;
			m)
				fzf_command+=" -m"
				;;
			p)
				fzf_command+=" --preview 'bat --color=always {}'"
				;;
			r)
				grep_location="~/"
				;;
			f)
				fzf_command+=" -m"
				fzf_command+=" --preview 'bat --color=always {}'"
				nvim_flag=true
				search_flag=true
				query=$OPTARG
				;;
			s)
				search_flag=true
				query=$OPTARG
				;;
			h)
				help_message
				return 0
				;;
            \? )
                echo "Invalid option: -$OPTARG" >&2
                echo "Usage: fuzzyvim [-o] [-m] [-p] [-h] [-f <query>] [-s <query>]" >&2
				echo "Use -h for help" >&2
                return 1
                ;;
            : )
                echo "Option -$OPTARG requires an argument." >&2
                echo "Usage: fuzzyvim [-o] [-m] [-p] [-h] [-f <query>] [-s <query>]" >&2
				echo "Use -h for help" >&2
                return 1
                ;;
		esac
	done
	shift $((OPTIND -1))


	if [ $search_flag = true ] && [ -z "$query" ]; then
		echo "Option -s requires a query argument." >&2
		echo "Usage: fuzzyvim [-o] [-m] [-p] [-h] [-f <query>] [-s <query>]" >&2
		return 1
	fi
	

	if [ $search_flag = true ]; then
		files=$(eval "$grep_command" "$query" "$grep_location" | eval "$fzf_command")
		# files=$(grep -rnl "$query" ~/ | eval "$fzf_command")
	else
		files=$(eval "$fzf_command")
	fi
	

	if [ -n "$files" ]; then
		if [ $nvim_flag = true ] ; then
			echo "Opening files..."
			nvim -p $(echo "$files")
		else
			echo "$files"
		fi
	else
		echo "No files selected."
	fi
}

fuzzyvim $@
